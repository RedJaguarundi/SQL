# In this project, I created a "Car Dealership" database from scratch, with fictional data. I then used SQL to query the table to 
find out useful information about my small car lot!

--Create a car dealership database

CREATE TABLE Cars (id INTEGER PRIMARY KEY, make TEXT, model TEXT, year INTEGER, price INTEGER, quantity INTEGER);
INSERT INTO cars VALUES ( 1, "Toyota", "Camry", 2009, 6000, 3);
INSERT INTO cars VALUES (2, "Subaru", "Outback", 2010, 8000, 1);
INSERT INTO cars VALUES (3, "Toyota", "Tundra", 2010, 13000, 5);
INSERT INTO cars VALUES (4, "Hyundai", "Sonata", 2022, 24000, 17);
INSERT INTO cars VALUES (5, "Toyota", "RAV4", 2001, 2000, 1);
INSERT INTO cars VALUES (6, "GMC", "Sierra", 2001, 10000, 13);
INSERT INTO cars VALUES (7, "Chevrolet", "Suburban", 1994, 8000, 1);
INSERT INTO cars VALUES (8, "Chevrolet", "Camaro", 1970, 20000, 1);
INSERT INTO cars VALUES (9, "Ford", "Mustang", 1994, 500, 1);
INSERT INTO cars VALUES (10, "Ford", "Mustang", 1972, 7000, 2);
INSERT INTO cars VALUES (11, "Chevrolet", "Corvair", 1964, 2000, 1);
INSERT INTO cars VALUES (12, "Pontiac", "GTO", 1969, 50000, 1);
INSERT INTO cars VALUES (13, "Mitsubishi", "Eclipse", 2002, 4000, 2);
INSERT INTO cars VALUES (14, "Mercedes", "G Wagon", 2023, 180000, 5);
INSERT INTO cars VALUES (15, "Subaru", "Forester", 2021, 50000, 12);

--Display the database ordered by price
SELECT * 
FROM cars 
ORDER BY price;

--Display how many cars from each year you have
SELECT year, SUM(quantity) 
FROM cars 
GROUP BY year;

--What is the avg price of a Chevrolet?
SELECT AVG(price) 
FROM cars 
WHERE make="Chevrolet";

--What are the cheapest 6 cars starting with the lowest?
SELECT make, model, price 
FROM cars 
ORDER BY price asc LIMIT 6;

--What are the 3 most expensive cars from the year 2000 or earlier?
SELECT make, model, price, year 
FROM cars 
WHERE year<=2000 
ORDER BY price desc LIMIT 3;

--Display all the cars from the database 2000 or newer by make
SELECT make, model, price, year 
FROM cars 
WHERE year>=2000 
ORDER BY make;

--What is the most expensive car you only have one of?
SELECT MAX(price) 
FROM cars 
WHERE quantity=1;

--What is your cheapest Toyota model?
SELECT MIN(price), model 
FROM cars 
WHERE make="Toyota";

--What is the newest Subaru you have and how many do you have?
SELECT MAX(year), model, quantity 
FROM cars 
WHERE make="Subaru";

--What car do you have the most of?
SELECT MAX(quantity), make, model 
FROM cars;

--What is the newest Mustang you have?
SELECT MAX(year) 
FROM cars 
WHERE model="Mustang";

--How many cars do you have total?
SELECT SUM(quantity) 
FROM cars;

--Show all the cars you have that cost $10k or more
SELECT * 
FROM cars 
WHERE price>=10000;

-- Display the car makes that have an average price of 20,000 or more
SELECT avg(price) as av_price, make
FROM cars 
group by make
having av_price >=20000;

--The car lot wants to advertise cars marked under $22,000. You need to catergorize the cars into promotional categories, then order them by price, 
so that you can advertise the best deals most aggressively. Some of these cars, like the legendary Pontiac GTO, show up as NULL because the price 
is too high to be considered a deal; so I filtered for NULLs
SELECT make, model, price,
CASE WHEN price <=6000 THEN "Super Sweet Steal of a Deal"
	WHEN price <=15000 THEN "Super Sweet Deal"
    WHEN price <=22000 THEN "Sweet Deal"
    END AS promotional_category
    FROM cars
    where promotional_category is not null
    GROUP BY price
    ORDER BY price;

--What is the value of the lot (using price)?
select SUM(price)
from cars;

--You are having a sale on Chevys only for 20% off their original price. Show the model, original price, and markdown price.
select model, price as original_price, price*.8 as markdown_price
from cars
where make = "Chevrolet"

--You are going to bring some cars to the site of a classic car show and hopefully sell some of them. The cutoff year to be considered a "classic" 
is now 2005! But since there is limited space and you want to make a good profit, you only want to bring cars priced over 15,000. 
Select the "old" cars in this range.
with old_cars as
	(select make, model, year, price
     from cars
     where year <=2005)
     
     select make, model, price
     from old_cars
     where price >=15000
